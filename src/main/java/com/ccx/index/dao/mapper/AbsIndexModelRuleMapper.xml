<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ccx.index.dao.AbsIndexModelRuleMapper" >
  <resultMap id="BaseResultMap" type="com.ccx.index.model.AbsIndexModelRule" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="score" property="score" jdbcType="INTEGER" />
    <result column="value_min" property="valueMin" jdbcType="DOUBLE" />
    <result column="value_max" property="valueMax" jdbcType="DOUBLE" />
    <result column="degree" property="degree" jdbcType="VARCHAR" />
    <result column="model_id" property="modelId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, code, score, value_min, value_max, degree, model_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from abs_index_model_rule
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from abs_index_model_rule
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ccx.index.model.AbsIndexModelRule" >
    insert into abs_index_model_rule (id, code, score, 
      value_min, value_max, degree, 
      model_id)
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{score,jdbcType=INTEGER}, 
      #{valueMin,jdbcType=DOUBLE}, #{valueMax,jdbcType=DOUBLE}, #{degree,jdbcType=VARCHAR}, 
      #{modelId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ccx.index.model.AbsIndexModelRule" >
    insert into abs_index_model_rule
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="valueMin != null" >
        value_min,
      </if>
      <if test="valueMax != null" >
        value_max,
      </if>
      <if test="degree != null" >
        degree,
      </if>
      <if test="modelId != null" >
        model_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        #{score,jdbcType=INTEGER},
      </if>
      <if test="valueMin != null" >
        #{valueMin,jdbcType=DOUBLE},
      </if>
      <if test="valueMax != null" >
        #{valueMax,jdbcType=DOUBLE},
      </if>
      <if test="degree != null" >
        #{degree,jdbcType=VARCHAR},
      </if>
      <if test="modelId != null" >
        #{modelId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ccx.index.model.AbsIndexModelRule" >
    update abs_index_model_rule
    <set >
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="valueMin != null" >
        value_min = #{valueMin,jdbcType=DOUBLE},
      </if>
      <if test="valueMax != null" >
        value_max = #{valueMax,jdbcType=DOUBLE},
      </if>
      <if test="degree != null" >
        degree = #{degree,jdbcType=VARCHAR},
      </if>
      <if test="modelId != null" >
        model_id = #{modelId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ccx.index.model.AbsIndexModelRule" >
    update abs_index_model_rule
    set code = #{code,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER},
      value_min = #{valueMin,jdbcType=DOUBLE},
      value_max = #{valueMax,jdbcType=DOUBLE},
      degree = #{degree,jdbcType=VARCHAR},
      model_id = #{modelId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--批量插入-->
  <insert id="insertList" parameterType="java.util.List" >
    insert into abs_index_model_rule (id, code, score,
    value_min, value_max, degree,
    model_id)
    values
      <foreach collection="list" item="rule" separator=",">
        (#{rule.id,jdbcType=INTEGER}, #{rule.code,jdbcType=VARCHAR}, #{rule.score,jdbcType=INTEGER},
        #{rule.valueMin,jdbcType=DOUBLE}, #{rule.valueMax,jdbcType=DOUBLE}, #{rule.degree,jdbcType=VARCHAR},
        #{rule.modelId,jdbcType=INTEGER})
      </foreach>
  </insert>

  <!--根据模型id删除rule-->
  <delete id="deleteByModelId">
    delete from abs_index_model_rule
      where model_id = #{modelId,jdbcType=INTEGER}
  </delete>
</mapper>