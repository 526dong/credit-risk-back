<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ccx.index.dao.AbsIndexRuleMapper" >
  <resultMap id="BaseResultMap" type="com.ccx.index.model.AbsIndexRule" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="value_min" property="valueMin" jdbcType="DOUBLE" />
    <result column="value_max" property="valueMax" jdbcType="DOUBLE" />
    <result column="value" property="value" jdbcType="VARCHAR" />
    <result column="score" property="score" jdbcType="INTEGER" />
    <result column="degree" property="degree" jdbcType="VARCHAR" />
    <result column="index_id" property="indexId" jdbcType="INTEGER" />
    <result column="code" property="code" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, value_min, value_max, value, score, degree, index_id, code
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from abs_index_rule
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from abs_index_rule
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ccx.index.model.AbsIndexRule" >
    insert into abs_index_rule (id, value_min, value_max, 
      value, score, degree, 
      index_id, code)
    values (#{id,jdbcType=INTEGER}, #{valueMin,jdbcType=DOUBLE}, #{valueMax,jdbcType=DOUBLE}, 
      #{value,jdbcType=VARCHAR}, #{score,jdbcType=INTEGER}, #{degree,jdbcType=VARCHAR}, 
      #{indexId,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ccx.index.model.AbsIndexRule" >
    insert into abs_index_rule
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="valueMin != null" >
        value_min,
      </if>
      <if test="valueMax != null" >
        value_max,
      </if>
      <if test="value != null" >
        value,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="degree != null" >
        degree,
      </if>
      <if test="indexId != null" >
        index_id,
      </if>
      <if test="code != null" >
        code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="valueMin != null" >
        #{valueMin,jdbcType=DOUBLE},
      </if>
      <if test="valueMax != null" >
        #{valueMax,jdbcType=DOUBLE},
      </if>
      <if test="value != null" >
        #{value,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        #{score,jdbcType=INTEGER},
      </if>
      <if test="degree != null" >
        #{degree,jdbcType=VARCHAR},
      </if>
      <if test="indexId != null" >
        #{indexId,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ccx.index.model.AbsIndexRule" >
    update abs_index_rule
    <set >
      <if test="valueMin != null" >
        value_min = #{valueMin,jdbcType=DOUBLE},
      </if>
      <if test="valueMax != null" >
        value_max = #{valueMax,jdbcType=DOUBLE},
      </if>
      <if test="value != null" >
        value = #{value,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="degree != null" >
        degree = #{degree,jdbcType=VARCHAR},
      </if>
      <if test="indexId != null" >
        index_id = #{indexId,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ccx.index.model.AbsIndexRule" >
    update abs_index_rule
    set value_min = #{valueMin,jdbcType=DOUBLE},
      value_max = #{valueMax,jdbcType=DOUBLE},
      value = #{value,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER},
      degree = #{degree,jdbcType=VARCHAR},
      index_id = #{indexId,jdbcType=INTEGER},
      code = #{code,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--批量删除规则通过指标ids-->
  <delete id="deleteByIndexIds" parameterType="java.util.List">
    delete from abs_index_rule
      where index_id in
    <foreach collection="list" item="indexId" separator="," open="(" close=")" >
      #{indexId,jdbcType=INTEGER}
    </foreach>
  </delete>

  <!--批量插入规则-->
  <insert id="insertList" parameterType="java.util.List">
    insert into abs_index_rule (id, value_min, value_max,
                                value, score, degree,
                                index_id, code) values
    <foreach collection="list" separator="," item="rule">
      (#{rule.id,jdbcType=INTEGER}, #{rule.valueMin,jdbcType=DOUBLE}, #{rule.valueMax,jdbcType=DOUBLE},
      #{rule.value,jdbcType=VARCHAR}, #{rule.score,jdbcType=INTEGER}, #{rule.degree,jdbcType=VARCHAR},
      #{rule.indexId,jdbcType=INTEGER}, #{rule.code,jdbcType=VARCHAR})
    </foreach>
  </insert>
</mapper>